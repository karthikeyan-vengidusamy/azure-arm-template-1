@{
    Layout = null;
    var item = GlobalAppSettings.Branding == AppBranding.BoldBI.Identifier ? "dashboards" : "reports";
    var appBranding = GlobalAppSettings.Branding;
    var helpUrl = "https://redirect.boldbi.com";
}
<!DOCTYPE html>
<html>
<head>
    <meta http-equiv="X-UA-Compatible" content="IE=edge" />
    <meta name="viewport" content="width=device-width, initial-scale=1, maximum-scale=1.0">
    <title>[[[Welcome to ]]]@GlobalAppSettings.BrandingDisplayName</title>
    <link rel="icon" href="@Url.Content(HttpRuntime.AppDomainAppVirtualPath + "/Content/images/" + GlobalAppSettings.Branding + "/Application/favicon.ico")" />
    @Scripts.Render("~/scripts/localizationcontent")
    @Styles.Render("~/styles/system-configuration")
    @Scripts.Render("~/scripts/system-configuration")
    <script src="~/signalr/hubs"></script>

    <script>
        var setSystemSettingsUrl = "@Url.Action("AddTenant", "ServerConfiguration")";
        var connectDatabaseUrl = "@Url.Action("ConnectDatabaseForServer", "ServerConfiguration")";
        var generateDatabaseUrl = "@Url.Action("GenerateDatabase", "ServerConfiguration")";
        var connectOracleDatabaseUrl = "@Url.Action("ConnectOracleDatabase", "ServerConfiguration")";
        var generateOracleDatabaseUrl = "@Url.Action("GenerateOracleDatabase", "ServerConfiguration")";
        var generateMySqlDatabaseUrl = "@Url.Action("GenerateMySqlDatabase", "ServerConfiguration")";
        var generatePostgreSqlDatabaseUrl = "@Url.Action("GeneratePostgreSqlDatabase", "ServerConfiguration")";
        var getAllDatabaseUrl = "@Url.Action("GetAllDatabase", "ServerConfiguration")";
        var checkTableExistsUrl = "@Url.Action("CheckTableAlreadyExistsForServer", "ServerConfiguration")";
        var checkTenantIdentifierExistUrl = "@Url.Action("CheckTenantNameIdentifierExist", "TenantsManagement")";
        var storageType = "@ViewBag.StorageType";
        var systemSetting =  @Html.Raw(Json.Encode(ViewBag.systemSetting));
        var blobExist = "@Url.Action("IsBlobExists", "ServerConfiguration")";
        var configuredDatabaseSettings = @Html.Raw(Json.Encode(ViewBag.ConfiguredDatabaseDetails));
        var checkDatabaseExistForServerUrl = "@Url.Action("CheckDatabaseExistsForServer", "ServerConfiguration")";
        var serverSetupImageUrl = "@Url.Content(HttpRuntime.AppDomainAppVirtualPath + "/Content/images/" + GlobalAppSettings.Branding + "/application/server-startup-image.svg")";
        var dataConnectorsCount = "@CloudAppConfig.DataConnectorsCount";
        var isBoldBI = "@(GlobalAppSettings.BrandingDisplayName == AppBranding.BoldBI.DisplayName)".toLowerCase() == "true";
        var storageUrl = "@Url.Content(HttpRuntime.AppDomainAppVirtualPath + "/Content/images/" + GlobalAppSettings.Branding + "/application/file-storage-image.svg")";
        var serverDbImageUrl = "@Url.Content(HttpRuntime.AppDomainAppVirtualPath + "/Content/images/" + GlobalAppSettings.Branding + "/application/server-dashboard-setup.svg")";
        var isAzureApplication = ("@ViewBag.IsAzureApplication".toLowerCase() === "true");
        var isBoldReports = "@(GlobalAppSettings.BrandingDisplayName == AppBranding.BoldReports.DisplayName)".toLowerCase() == "true";
        var selfHosted = ("@ViewBag.selfHosted".toLowerCase() === "true");
        var boldReportsUrl = "@CloudAppConfig.InternalAppReportUrl/@CloudAppConfig.TenantIdentifierPrefix/";
        var boldBIUrl = "@CloudAppConfig.InternalAppBIUrl/@CloudAppConfig.TenantIdentifierPrefix/";
        var helpUrl = "@(helpUrl + "?id=")";
        $(function () {
            // Declare a proxy to reference the hub.
            var statusTracker = $.connection.progressHub;
            // Create a function that the hub can call to broadcast messages.
            statusTracker.client.sendMessage = function (message) {
                // Html encode display name and message.
                $(".configuration-status").html(message);
            };
            $.connection.hub.start().done(function () {
                    statusTracker.server.addTenantGroup("tenant-deployment");
            });
        });
        $(document).ready(function () {
            $("#blob-storage-form").hide();
            $("#system-settings-filestorage-container").hide();
            $('#auth-type-dropdown').removeClass("hide").addClass("show");
            $("#system-settings-db-selection-container").hide();
            $("#system-settings-tenant-container").show();
            if (configuredDatabaseSettings != undefined && configuredDatabaseSettings != null) {
                var serverType = "@((DatabaseType)ViewBag.ConfiguredDatabaseDetails.ServerType)";
                switch (serverType) {
                    case "MSSQL":
                        $('#port-number-dropdown').removeClass("show").addClass("hide");
                        $('#auth-type-dropdown').removeClass("hide").addClass("show");

                        var isWindowsAuth = $("#check-windows").val() === "windows";
                        $("#txt-login").attr("disabled", isWindowsAuth);
                        $("#txt-password-db").attr("disabled", isWindowsAuth);

                        $("#database-type").val(serverType).selectpicker("refresh").trigger("change");
                        $("#txt-servername").val(configuredDatabaseSettings.ServerName);
                        $("#check-windows").val(configuredDatabaseSettings.AuthenticationType === 0 ? "windows" : "sql").selectpicker("refresh").trigger("change");
                        $("#txt-login").val(configuredDatabaseSettings.UserName);
                        $("#txt-password-db").val(configuredDatabaseSettings.Password);
                        break;

                    case "PostgreSQL":
                        $('#auth-type-dropdown').removeClass("show").addClass("hide");
                        $('#port-number-dropdown').removeClass("hide").addClass("show");
                        $("#txt-login").attr("disabled", false);
                        $("#txt-password-db").attr("disabled", false);
                        $("#database-type").val(serverType).selectpicker("refresh").trigger("change");
                        $("#txt-servername").val(configuredDatabaseSettings.ServerName);
                        $("#txt-portnumber").val(configuredDatabaseSettings.Port);
                        $("#txt-login").val(configuredDatabaseSettings.UserName);
                        $("#txt-password-db").val(configuredDatabaseSettings.Password);
                        break;

                    case "MySQL":
                        $('#auth-type-dropdown, #port-number-dropdown').removeClass("show").addClass("hide");
                        $("#mysql-odbc-dropdown").removeClass("hide").addClass("show");
                        $("#database-type").val(serverType).selectpicker("refresh").trigger("change");
                        $("#mysql-odbc-dsn").val(configuredDatabaseSettings.DSN).selectpicker("refresh").trigger("change");
                        $("#txt-servername").val(configuredDatabaseSettings.ServerName);
                        $("#txt-login").attr("disabled", false);
                        $("#txt-password-db").attr("disabled", false);
                        $("#txt-login").val(configuredDatabaseSettings.UserName);
                        $("#txt-password-db").val(configuredDatabaseSettings.Password);
                        break;

                    case "MSSQLCE":
                        $("#database-type").val(serverType).selectpicker("refresh").trigger("change");
                        break;
                }

                configuredDatabaseSettings = null;
            }

            var sitenameText = isBoldBI ? "Bold BI Enterprise Dashboards" : "Bold Reports Enterprise Reporting";
            $("#txt-site-name").val(sitenameText);
            $("#txt-site-identifier").val('site1');
            $(".site-default-text").html("site1");
            $(".site-full-url").attr("data-content", $(".site-base-url").text() + $(".site-default-text").text());

            

            $("[data-toggle='popover']").popover({
                container: '#system-settings-tenant-container',
                trigger: 'hover',
                addClass: 'tenant-url'
            });

            $(".site-full-url").hover(function () {
                $("#system-settings-tenant-container .arrow").css("left", "50%");
                $("#system-settings-tenant-container .popover").css("left", "0");
            });

            $(document).on("keyup", "#txt-site-identifier", function (event) {
                if (isBoldReports) {
                    $(".site-default-text").html("").html($(this).val());
                }
                else if (isBoldBI) {
                    $(".site-default-text").html("").html($(this).val());
                }

                $(".site-full-url").attr("data-content", $(".site-base-url").text() + $(".site-default-text").text());
            });

            $(document).click(function (e) {
                if (e.target.id != "info-icon") {
                    $('#prefix-message').css("display", "none");
                }
                if (e.target.id != "info-icon-postgressql") {
                    $('#prefix-message-postgresql').css("display", "none");
                }
            });

            addTitleForDropdown(".database-dropdown-margin");
        });
    </script>
</head>
<body class="startup-page-container-body">
    @Html.Partial("_Header.OnpremiseStartup")
    <div class="system-startUp-settings-bg">
        <input id="tenant-email" value="@ViewBag.UserEmail" hidden />
        @if (appBranding == AppBranding.BoldBI.Identifier)
        {
            <input id="get-intermediate-db-configuration" value="true" hidden />
        }
        else
        {
            <input id="get-intermediate-db-configuration" value="false" hidden />
        }
        <div class="startup-page-conatiner" id="startup-page-conatiner">
            <div id="system-settings-general" class="col-lg-12 col-md-12 col-sm-12 col-xs-12">
                <div class="col-lg-7 col-md-7 col-sm-7 col-xs-7" id="image-parent-container">
                    <div class="image-container">
                        <img class="startup-image image-con-part" src="@Url.Content(HttpRuntime.AppDomainAppVirtualPath + "/Content/images/" + appBranding + "/application/site-name-configuration.svg")"/>
                        <div class="startup-content">
                            @if (ViewBag.IsAzureApplication)
                            {
                                <span class="first-content">[[[Step 3: Let’s configure your site]]]</span>
                            }
                            else
                            {
                                <span class="first-content">[[[Step 4: Let’s configure your site]]]</span>
                            }

                            @if (appBranding == AppBranding.BoldBI.Identifier)
                            {
                                <span class="second-content site-description">
                                    Bold BI [[[multi-tenancy can host multiple sites on a single instance by isolating the database and the resources for each site.]]]
                                </span>
                            }
                            else
                            {
                                <span class="second-content site-description">
                                    Bold Reports [[[multi-tenancy can host multiple sites on a single instance by isolating the database and the resources for each site.]]]
                                </span>
                            }


                            <a id="help-link" href='@(helpUrl.TrimEnd('/') + "?id=4045")' target="_blank">[[[Need Help?]]]</a>
                        </div>
                    </div>
                </div>
                @Html.Partial("_TenantConfiguration")
                @Html.Partial("_DatabaseConfiguration")
                @Html.Partial("_FileStorage")
            </div>
        </div>
    </div>
</body>
</html>