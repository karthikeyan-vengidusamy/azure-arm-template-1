@using System.Configuration
@using Newtonsoft.Json
@{
    Layout = null;
    bool isSelfHosted = ServerAppConfig.IsSelfHosted;
    var globalAppSettings = new TenantHandler().GetTenantConfig();
    var isDebug = globalAppSettings.SystemSettings.IsDebug;
    var tenantAppConfig = new TenantAppConfiguration(globalAppSettings);
    var licenseSettings = globalAppSettings.GetLicenseSettings();
    var cdnLink = globalAppSettings.SystemSettings.CDNLink;
    var displayName = HttpContext.Current.Session["displayname"] != null ? HttpContext.Current.Session["displayname"].ToString() : string.Empty;
    var emailAddress = HttpContext.Current.Session["emailaddress"] != null ? HttpContext.Current.Session["emailaddress"].ToString() : string.Empty;
    var notificationCount = new NotificationManagement(globalAppSettings).GetUnreadNotificationCount();
    var appLogo = globalAppSettings.SystemSettings.MainScreenLogo;
    var defaultAppLogo = cdnLink + "/images/application/" + ServerAppConfig.AppBranding + "/" + IconFileNames.MainLogo;
    var idpreferenceId = HttpContext.Current.Session["idpReferenceId"] != null ? HttpContext.Current.Session["idpReferenceId"].ToString() : string.Empty;
    var idPUrl = ServerAppConfig.InternalAppIdpUrl;
    var faviconLogo = globalAppSettings.SystemSettings.FavIcon;
    var currentUrl = HttpContext.Current.Request.RawUrl.ToString();
    var dashboardBIUrl = new DashboardServerEndPoints(globalAppSettings).DashboardServerBIUrl();
    var feedbackCookie = Request.Cookies["feedback.visible"];
    var showFeedbackKey = ServerAppConfig.EnableCloudFeedback;
    var showFeedback = (feedbackCookie == null && !DeviceDetection.IsMobile && showFeedbackKey);
    var isAdmin = HttpContext.Current.Session["IsAdmin"] != null && Convert.ToBoolean(HttpContext.Current.Session["IsAdmin"]);
    var donotShowJourney = Request.Cookies["syncfusion.dashboards.server.journey"] != null;
    var helpSiteBaseUrl = ConfigurationManager.AppSettings["documentation:base_url"];
    var currentUrlLocalPath = HttpContext.Current.Request.Url.LocalPath.ToLower();
    var isImageRequest = currentUrl.IndexOf(".png", StringComparison.CurrentCultureIgnoreCase) > 0 ||
                         currentUrl.IndexOf(".jpg", StringComparison.CurrentCultureIgnoreCase) > 0 ||
                         currentUrl.IndexOf(".gif", StringComparison.CurrentCultureIgnoreCase) > 0 ||
                         currentUrl.IndexOf(".svg", StringComparison.CurrentCultureIgnoreCase) > 0;
    var dashboardPageUrl = Url.Action("Dashboards", "Dashboards");
    var widgetsPageUrl = Url.Action("Widgets", "Widgets");
    var dataSourcesPageUrl = Url.Action("DataSources", "DataSources");
    var schedulePageUrl = Url.Action("Schedules", "Scheduler");
    var profilePageUrl = Url.Action("Profilepage", "User");
    var homepagePageUrl = Server.UrlDecode(Url.Action("Homepages", "Boards"));
    var isMobile = DeviceDetection.IsMobile;
    var slideshowPageUrl = Url.Action("Slideshows", "Slideshow");
    var configurationPath = isSelfHosted ? dashboardBIUrl + "/webdesignerservice/scripts/settings/" + GlobalAppSettings.Branding.ToLower() + "/settings.min.js" : globalAppSettings.SystemSettings.CDNLink.ToLower() + "/scripts/settings/" + GlobalAppSettings.Branding.ToLower() + "/settings.min.js";
    var dashboardServerApiUrl = new DashboardServerApiEndPoints(globalAppSettings).DashboardServerApiUrl();

    HttpContext.Current.Response.Cookies.Add(new HttpCookie(ServerAppConfig.DesignerLanguageCookieName)
    {
        Value = GlobalAppSettings.GetLanguageTag(),
        HttpOnly = true,
        Expires = DateTime.UtcNow.AddYears(1)
    });
}
<!DOCTYPE html>

<html style="height:100%;width:100% ; overflow:hidden;">
<head>
    <meta http-equiv="X-UA-Compatible" content="IE=edge" />
    <meta name="viewport" content="width=device-width" />
    @if (!isSelfHosted && !globalAppSettings.SystemSettings.IsDebug)
    {
        <meta http-equiv="Content-Security-Policy" content="upgrade-insecure-requests">
    }
    <meta name="dashboard_service:url" content="@globalAppSettings.SystemSettings.InternalAppDataServiceUrl" />
    <meta name="dashboard_server:url" content="@dashboardServerApiUrl" />
    <meta name="designer_service:url" content="@ServerAppConfig.InternalAppDataServiceUrl" />
    <meta name="designer_service:access_token" content="@ViewBag.AccessToken" />
    <meta name="data_service:url" content="@ServerAppConfig.InternalAppDataServiceUrl" />
    <meta name="datasource_schedule:url" content="@Url.Action("GetRecurrenceTypeView", "DataSources")" />

    <meta name="datasource:connectionlist" content="@ViewBag.Datasources" />
    <meta name="intermediatedbstatus" content="@ViewBag.IntermediateDbStatus" />

    <meta name="datasource:version" content="@ViewBag.Version" />
    <meta name="datasource:id" content="@ViewBag.DataSourceId" />
    <meta name="datasource:name" content="@ViewBag.DataSourceName" />
    <meta name="datasource:description" content="@ViewBag.Description" />
    <meta name="datasource:is_draft" content="@ViewBag.IsDraft" />

    <meta name="user:culture" content="@ViewBag.Culture" />
    <meta name="globalization:date_format" content="@globalAppSettings.SystemSettings.DateFormat" />
    <meta name="globalization:time_format" content="@globalAppSettings.SystemSettings.TimeFormat.ToString()" />



    @if (ViewBag.DataSourceName != null)
    {
        <title>@ViewBag.DataSourceName - [[[Design Datasource]]] - @globalAppSettings.SystemSettings.OrganizationName</title>
    }
    else
    {
        <title>Untitled - [[[Design Datasource]]] - @globalAppSettings.SystemSettings.OrganizationName</title>
    }
    <link rel="icon" href="@faviconLogo" onerror="if (this.href !== null && this.href.toLowerCase() !== '@cdnLink/images/application/@ServerAppConfig.AppBranding/@IconFileNames.Favicon') this.href = '@cdnLink/Images/Application/@ServerAppConfig.AppBranding/@IconFileNames.Favicon';" />
    <style>
        #create-item, #user-system-notification {
            display: none !important;
        }
    </style>
    <script>
        var dashboardDesignerUrl = "@Url.Action("DashboardDesigner", "Designer")";
        var dataSourcesPageUrl = "@Url.Action("DataSources", "DataSources")";
        var getUserNotificationsPartialViewResultUrl = "@Url.Action("GetUserNotificationsPartialViewResult", "notification")";
        var licenseSettings =@Html.Raw(JsonConvert.SerializeObject(licenseSettings));
		var baseUrl = "@globalAppSettings.SystemSettings.BaseUrl"; // If you are working on local developemnt change the baseurl as localsource url
        var currentUrl = "@currentUrl";
        var organizationName = "@globalAppSettings.SystemSettings.OrganizationName";
        var isDebug = "@isDebug";
        var idpreferenceId = "@idpreferenceId";
        var idpUrl = "@idPUrl";
        var displayName = "@displayName";
        var feedbackSendUrl = "@Url.Action("AddUserFeedback", "Feedback")";
        var feedbackCookieUrl = "@Url.Action("SetUserFeedbackCookies", "FeedBack")";
        var showFeedbackDialog = "@showFeedback";
        var helpSiteBaseUrl = "@helpSiteBaseUrl";
        var appBranding = "@GlobalAppSettings.Branding";
        var configurationPath = "@configurationPath";
        var rootUrlAction = "@Url.Action("", "")";
        var isSelfHosted = "@isSelfHosted";
        var modelLanguage = "@ViewBag.ModelLanguage";

    </script>
    <script type="text/javascript">
        window.addEventListener("beforeunload", function (e) {
            var confirmationMessage = "[[[Are you sure you want to close? The current progress will be lost if you continue.]]]";

            if ($('#datasourceDesigner').data('ejDashboardDesigner').hasReportChanges()) {
                (e || window.event).returnValue = confirmationMessage;
                return 'false';
            }
            else {
                return;
            }
        });
    </script>
</head>
<body ng-app="serverApp" id="body" style="overflow: hidden; position: static; margin: 0; padding: 0; height: 100%; width: 100%">
    <div class="preloader-wrap" style="width: 100%;height: 100%; position: fixed; top: 0; bottom: 0; background: #fff; z-index : 2; ">
        <input type="hidden" id="embed-iframe" value="@ViewBag.isEmbed" />
        <div id="loader_image" align="center" style="position:relative;top:39%;">
            <div class="loader-blue loader-icon" id="loader-icon">
                <svg class="circular">
                    <circle class="path" cx="27" cy="27" r="20" fill="none" stroke-width="4" stroke-miterlimit="10"></circle>
                </svg>
            </div>
        </div>
        <div id="loader_text" align="center" style="font-family:Segoe UI,SegoeUI,Helvetica Neue,Helvetica,Arial,sans-serif;position:relative;top: 42%;font-size:21px;font-weight:400;">[[[Initializing Datasource Designer]]]</div>
    </div>

    @Styles.Render("~/bundles/styles/datasource-designer")
    @Styles.Render("~/bundles/Styles/webdesignerservice/dashboard-designer-component")

    <script src="@(EarlyUrlLocalizer.IgnoreLocalizationUrlPrefix)@ServerAppConfig.InternalAppDataServiceUrl/localization/designerlocalization.js?v=@ServerAppConfig.ProductVersion"></script>

    @Scripts.Render("~/bundles/Scripts/webdesignerservice/dashboard-designer-dependency")
    @*Referred directly in the view page due to pivot grid changes and sfcompressor minification issue*@
    @if (isSelfHosted)
    {
        @Scripts.Render("~/bundles/Scripts/webdesignerservice/ej1-web-all")
        @Scripts.Render("~/bundles/Scripts/webdesignerservice/ej2-web-all")
        @Scripts.Render("~/bundles/Scripts/webdesignerservice/dashboard-designer-component")
    }
    else
    {
        <link href="https://fonts.googleapis.com/css?family=Roboto:400,500,700" rel="stylesheet">

        <script src="@cdnLink/scripts/designer/ej1.web.all.min.js"></script>
        <script src="@cdnLink/scripts/designer/ej2.web.all.min.js"></script>
        @Scripts.Render("~/bundles/Scripts/webdesignerservice/dashboard-designer-component")
    }

    @Scripts.Render("~/bundles/scripts/datasource-designer")
    <script src="~/signalr/hubs"></script>
    @Scripts.Render("~/bundles/scripts/signalr-bundle")

    <section id="menu-area" class="custom-bootstrap-styles" style="display:none">
        @Html.Partial("../Shared/_Menu", globalAppSettings.SystemSettings.CDNLink, new ViewDataDictionary { { "helpSiteBaseUrl", helpSiteBaseUrl }, { "helpSiteUrl", ViewBag.HelpSiteUrl }, { "GlobalAppSettings", globalAppSettings } })
    </section>
    @*<div id="designer-header" class="custom-bootstrap-styles">
            <div class="datasource-name">
                <span class="edit-datasource">@ViewBag.DataSourceName</span>
                <span class="datasource-status">[[[(Edited)]]]</span>
                <span class="datasource-unsave" style="display:none">Unsaved Changes</span>
            </div>
        </div>*@
    <div id="datasourceDesigner"></div>

    <div id="messageBox">
        <div class="message-header"></div>
        <div class="message-box-close"></div>
        <div class="message-content text-center"></div>
        <div class="message-box-btn-holder"></div>
    </div>

    @Styles.Render("~/bundles/styles/dashboard-feedback")
    @if (!ServerAppConfig.IsSelfHosted)
    {
        @Html.Partial("~/Views/Shared/_GeneralFeedback.cshtml")
        @Html.Partial("~/Views/Support/_ConciergeSupport.cshtml")
        @Scripts.Render("~/bundles/scripts/dashboard-feedback-viewer")
    }

    @Scripts.Render("~/bundles/scripts/localizationcontent")

    <div class="custom-bootstrap-styles custom-server-style">
        <div id="success-alert">
            <div id="image-container">
                <div class="image-holder">
                    <span class="su su-tick" alt="Success Icon"></span>
                </div>
            </div>
            <div id="message">
                <h1 id="message-header"></h1>
                <span id="message-content"></span>
            </div>
        </div>
        <div id="warning-alert">
            <div id="image-container">
                <span class="su su-warning-alt" alt="Warning Icon"></span>
            </div>
            <div id="message" class="div-close">
                <h1 id="message-header"></h1>
                <span id="message-content"></span>
            </div>
            <div class="close-div">
                <span id="close-content">[[[Close]]]</span>
            </div>
        </div>
    </div>
</body>


</html>