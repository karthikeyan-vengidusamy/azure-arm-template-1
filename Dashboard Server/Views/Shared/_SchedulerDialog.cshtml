@{
    Layout = null;
    bool isSelfHosted = ServerAppConfig.IsSelfHosted;
    var globalAppSettings = new TenantHandler().GetTenantConfig();
    var cdnLink = globalAppSettings.SystemSettings.CDNLink;
    var dashboardServerApiUrl = new DashboardServerApiEndPoints(globalAppSettings).DashboardServerApiUrl();

    HttpContext.Current.Response.Cookies.Add(new HttpCookie("i18n.sitelangtag")
    {
        Value = GlobalAppSettings.GetLanguageTag(),
        HttpOnly = true,
        Expires = DateTime.UtcNow.AddYears(1)
    });

    HttpContext.Current.Response.Cookies.Add(new HttpCookie(ServerAppConfig.DesignerLanguageCookieName)
    {
        Value = GlobalAppSettings.GetLanguageTag(),
        HttpOnly = true,
        Expires = DateTime.UtcNow.AddYears(1)
    });
}

<!DOCTYPE html>
<html class="dashboard-server">
<head>
    <meta http-equiv="X-UA-Compatible" content="IE=edge" />
    <meta name="dashboard_server:url" content="@dashboardServerApiUrl" />
    <meta name="designer_service:url" content="@ServerAppConfig.InternalAppDataServiceUrl" />
    <meta name="data_service:url" content="@ServerAppConfig.InternalAppDataServiceUrl" />

    @Styles.Render("~/bundles/styles/ScheduleIframe", "~/bundles/styles/SchedulerDialog")
    @Styles.Render("~/bundles/Styles/webdesignerservice/dashboard-designer-component")
    @Scripts.Render("~/bundles/Scripts/webdesignerservice/dashboard-designer-dependency")
    <script src="@(EarlyUrlLocalizer.IgnoreLocalizationUrlPrefix)@ServerAppConfig.InternalAppDataServiceUrl/localization/designerlocalization.js?v=@ServerAppConfig.ProductVersion"></script>
    @if (isSelfHosted)
    {
        @Scripts.Render("~/bundles/Scripts/webdesignerservice/ej1-web-all")
        @Scripts.Render("~/bundles/Scripts/webdesignerservice/ej2-web-all")
        @Scripts.Render("~/webdesignerservice/scripts/ej2.calendars.all.min.js")
        @Scripts.Render("~/webdesignerservice/scripts/ej2.richtexteditor.all.min.js")
        @Scripts.Render("~/bundles/Scripts/webdesignerservice/dashboard-designer-component")
    }
    else
    {
        <link href="https://fonts.googleapis.com/css?family=Roboto:400,700" rel="stylesheet">
        <script src="@cdnLink/scripts/designer/ej1.web.all.min.js"></script>
        <script src="@cdnLink/scripts/designer/ej2.web.all.min.js"></script>
        <script src="@cdnLink/scripts/designer/ej2.calendars.all.min.js"></script>
        <script src="@cdnLink/scripts/designer/ej2.richtexteditor.all.min.js"></script>
        @Scripts.Render("~/bundles/Scripts/webdesignerservice/dashboard-designer-component")
    }

    <style>
        body {
            background-color: white !important;
            padding: 0.5em 1em !important;
        }
    </style>
    @Html.Partial("~/Views/Shared/_LoaderIcon.cshtml")

</head>
<body class="schedule-dialog custom-bootstrap-styles">
    <input type="hidden" data-item-type="dashboard" id="itemType" />
    <input type="hidden" value="@ViewBag.Fullname" id="fullname" />
    <input type="hidden" value="@ViewBag.Username" id="userName" />
    <input type="hidden" value="@globalAppSettings.SystemSettings.OrganizationName" id="orgName" />
    <input type="hidden" value="@globalAppSettings.SystemSettings.DateFormat" id="dateFormat" />
    <input type="hidden" value="@globalAppSettings.SystemSettings.TimeFormat.ToString()" id="timeFormat" />

    
    <div class="modal" tabindex="-1" role="dialog" id="schedule-div">
        <span id="item-id" hidden>@HttpContext.Current.Request.QueryString["itemId"]</span>
        <div class="modal-dialog col-lg-12 popup-header no-margin no-padding" role="document">
            <div class="modal-content col-lg-12" id="popup-container" data-spy="scroll">
                <div class="modal-header no-margin col-sm-12">
                    <div class="col-sm-10 col-xs-10 no-padding pull-left nav-top"><span title="[[[Schedule]]]" class="su su-nav-schedule col-lg-1 col-xs-1 col-sm-1 col-md-1 header-icon"></span><span class="popup-title schedule-popup-title ellipsis col-lg-9 col-xs-9 col-sm-9 col-md-9 no-padding"></span></div>
                    <div class="col-sm-2 col-xs-2 title no-padding"><a href="javascript:void(0);" class="popup-close" title="[[[Close]]]"><span id="schedule-popup" class="su su-close pull-right"></span></a></div>
                    <div id="windowCaption" class="report-name no-padding col-xs-12 link-item-name ellipsis" style="font-size: 12px;padding-top: 3px !important;">
                        [[[Create a data driven or a time based schedule]]]
                    </div>
                </div>
                <div class="modal-body share-popup col-xs-12" id="schedule-dialog">
                    <div class="col-sm-12 col-xs-12 no-margin no-padding schedule-popup-body">
                        <div class="col-sm-12 col-xs-12 no-padding">
                            <div class="col-sm-2 col-xs-2 no-padding align-center"><label>[[[Category ]]]<span class="mandatory">*</span></label></div>
                            <div class="category-dropdown col-sm-4 col-xs-4">
                                <select id="selected_category" data-live-search="true" title='[[[Select category]]]' name="categoryId" class="selectpicker col-sm-4 col-xs-4" data-size="5">
                                    @if (HttpContext.Current.Request.QueryString["itemId"] != null)
                                    {
                                        <option value="@HttpContext.Current.Request.QueryString["categoryId"]" selected="selected">@HttpContext.Current.Request.QueryString["categoryName"]</option>
                                    }
                                    else
                                    {
                                        <option value="" selected="selected" class="hide-option" disabled="disabled">[[[Select category]]]</option>
                                    }

                                </select>
                                <span id="category-message" class="ErrorMessage validate-error">[[[Please select category]]]</span>
                                <input type="hidden" id="category_change_validation" name="isCategoryChanged" value="false" />
                            </div>
                        </div>
                        <div class="col-sm-12 col-xs-12 no-padding">
                            <div class="col-sm-2 col-xs-2 no-padding align-center"><label>[[[Dashboard ]]]<span class="mandatory">*</span></label></div>
                            <div class="dashboard-dropdown col-sm-4 col-xs-4">
                                <select id="selected_dashboard" data-live-search="true" title='[[[Select dashboard]]]' name="dashboardId" class="selectpicker col-sm-4 col-xs-4" data-size="5">
                                    @if (HttpContext.Current.Request.QueryString["actionType"].ToString().ToLower() == "create")
                                    {
                                        if (@HttpContext.Current.Request.QueryString["multiDashboardName"] != "" && @HttpContext.Current.Request.QueryString["multiDashboardName"] != "undefined")
                                        {
                                            <option value="@ViewBag.parentItemId" selected="selected">@HttpContext.Current.Request.QueryString["multiDashboardName"]</option>
                                        }
                                        else if (@HttpContext.Current.Request.QueryString["itemId"] != "")
                                        {
                                            <option value="@HttpContext.Current.Request.QueryString["itemId"]" selected="selected">@HttpContext.Current.Request.QueryString["itemName"]</option>
                                        }
                                        else
                                        {
                                            <option value="" selected="selected" class="hide-option" disabled="disabled">[[[Select dashboard]]]</option>
                                        }
                                    }
                                    else
                                    {
                                        if (@HttpContext.Current.Request.QueryString["multiDashboardName"] != "")
                                        {
                                            <option value="" selected="selected">@HttpContext.Current.Request.QueryString["multiDashboardName"]</option>
                                        }
                                        else
                                        {
                                            <option value="@HttpContext.Current.Request.QueryString["itemId"]" selected="selected">@HttpContext.Current.Request.QueryString["itemName"]</option>
                                        }
                                    }

                                </select>
                                <input type="hidden" id="dashboard_change_validation" name="isDashboardChanged" value="false" />
                                <span id="dashboard-message" class="ErrorMessage validate-error">[[[Please select dashboard]]]</span>
                            </div>
                            @*<div class="col-sm-1 col-xs-1 align-center text-right"><label style="text-align:right;">[[[Tabs ]]]</label></div>
            <div class="childdashboard-dropdown col-sm-4 col-xs-4">
                <select id="selected_childdashboard" data-live-search="true" title='[[[Select dashboard]]]' name="childdashboardId" class="selectpicker col-sm-4 col-xs-4" data-size="5">
                    @if (HttpContext.Current.Request.QueryString["multiDashboardName"] != "")
                    {
                        <option value="@HttpContext.Current.Request.QueryString["itemId"]" selected="selected">@HttpContext.Current.Request.QueryString["itemName"]</option>
                    }
                    else
                    {
                        <option value="" selected="selected">[[[All]]]</option>
                    }
                </select>
            </div>
            <div class="col-sm-1 col-xs-1 no-padding tab-info">
                <span class="dropdown-toggle cursor-type pull-left" data-toggle="dropdown"><span class="su su-info" title=""></span></span>
                <div class="col-xs-2 dropdown-menu tab-description">
                    [[[This can be enabled if the selected dashboard contains multiple tabs.]]]
                </div>
            </div>*@
                        </div>
                        <div class="col-sm-12 col-xs-12 no-padding">
                            <div class="col-sm-2 col-xs-2 no-padding align-center"><label>[[[Schedule Name ]]]<span class="mandatory">*</span></label></div>
                            <div class="col-sm-4 col-xs-4 name-field">
                                <input type="text" class="form-control cls-schname" name="" id="schedule-name" maxlength="100">
                                <div class="validate-error" id="schedule-name-error-container">
                                    <div id="schedule-name-validator"></div>
                                </div>
                            </div>
                        </div>

                        <div class="col-sm-12 col-xs-12 no-padding alert-type">
                            <div class="col-sm-2 col-xs-2 no-padding"><label>[[[Data Alerts]]]</label></div>
                            <div class="col-sm-3 col-xs-3 line-removal">
                                <span class="material-switch">
                                    <input type="checkbox" id="data-alerts" />
                                    <label for="data-alerts" class="label-primary"></label>
                                </span>
                                <div class="col-sm-1 col-xs-1 no-padding data-alert-info">
                                    <span class="dropdown-toggle cursor-type pull-left" data-toggle="dropdown"><span class="su su-info" title=""></span></span>
                                    <div class="col-xs-2 dropdown-menu data-alert-description">
                                        [[[Receive email notifications when specified criteria is met; for example, when the total sales value is greater than $10,000.]]]
                                    </div>
                                </div>
                            </div>

                            @*<div class="col-sm-9 col-xs-9 data-alerts-disabled bg-warning">
                <div class="alert-img col-xs-1 no-padding">
                    <span class="su su-warning-alt"></span>
                </div>
                <span class="data-alerts-disabled-text col-xs-11 no-padding text-warning" style="margin-top: 10px;">[[[Data Alert is temporarily unavailable due to technical reasons. We regret the inconvenience caused.]]]</span>
            </div>*@
                        </div>

                        <div id="data-changes-div">
                            <div id="serialize-columninfo" class="hide"></div>
                            <div id="serialize-conditioninfo" class="hide"></div>
                            <div id="alert-value" class="hide">false</div>
                            <div id="previous-data" class="hide"></div>
                        </div>
                        <div class="col-sm-12 col-xs-12 no-padding enabled-div">
                            <div class="col-sm-2 col-xs-2 no-padding  align-center">
                                @Html.Label("enable-schedule", "[[[Enabled]]]", new { @class = "enabled-label" })
                            </div>
                            <div class="col-sm-10 col-xs-10 pull-left no-margin enabled-label-div line-removal">
                                <span class="material-switch text-left">
                                    <input type="checkbox" name="Enabled" id="enable-schedule" checked="checked" />
                                    <label class="label-primary" for="enable-schedule"></label>
                                </span>
                                <span class="validation-message"></span>
                            </div>
                        </div>
                    </div>
                </div>
                <div class="modal-footer col-xs-12">
                    <div class="col-sm-12 col-xs-12 no-margin" id="next-container">
                        <input id="schedule-back" type="button" title="[[[Back]]]" value="[[[Back]]]" tabindex="6" class="secondary-button pull-left button-left">
                        <input id="schedule-next-cancel" title="[[[Cancel]]]" type="button" value="[[[Cancel]]]" tabindex="5" class="secondary-button leftmargin pull-right">
                        <input id="schedule-next" title="[[[Next]]]" type="button" value="[[[Next]]]" tabindex="4" class="primary-button pull-right">
                    </div>
                    <div id="submit-container" class="col-sm-12 col-xs-4 no-margin">
                        <input id="schedule-back" type="button" title="[[[Back]]]" value="[[[Back]]]" tabindex="6" class="secondary-button pull-left button-left">
                        <input id="schedule-submit-cancel" title="[[[Cancel]]]" type="button" value="[[[Cancel]]]" tabindex="5" class="secondary-button leftmargin pull-right button-right">
                        <input id="schedule-submit" title="[[[Schedule]]]" type="button" value="[[[Schedule]]]" tabindex="4" class="primary-button pull-right button-right">
                    </div>
                </div>
            </div>
        </div>
    </div>
    @Scripts.Render("~/bundles/scripts/localizationcontent")
</body>
</html>
@Scripts.Render("~/bundles/scripts/SchedulerDialog")

<script>
    var dashboardServerResourceUrl = "@globalAppSettings.SystemSettings.CDNLink";
    var actionType = "@HttpContext.Current.Request.QueryString["actionType"].ToString()";
    var itemId = "@HttpContext.Current.Request.QueryString["itemId"].ToString()";
    var itemName = "@HttpContext.Current.Request.QueryString["itemName"].ToString()";
    var scheduleId = "@HttpContext.Current.Request.QueryString["scheduleId"].ToString()";
    var multiDashboardName = "@HttpContext.Current.Request.QueryString["multiDashboardName"].ToString()";
    var categoryName = "@HttpContext.Current.Request.QueryString["categoryName"].ToString()";
    var getDashboardUrl = "@Url.Action("GetItems", "dashboards")";
    var getScheduleInfoUrl = "@Url.Action("GetScheduleInfo", "scheduler")";
    var getChildDashboardUrl = "@Url.Action("GetChildDashboards", "scheduler")";
    var checkScheduleNameExistUrl = "@Url.Action("CheckScheduleNameExist", "scheduler")";
    var recurrenceType = "@Url.Action("ScheduleRecurrenceType", "scheduler")";
    var scheduleRecipients = "@Url.Action("RecipientsList", "scheduler")";
    var emailEditor = "@Url.Action("EmailEditor", "scheduler")";
    var dataChanges = "@Url.Action("DataChanges", "scheduler")";
    var getwidgetUrl = "@Url.Action("GetWidgets", "scheduler")";
    var getCategoryUrl = "@Url.Action("GetCategories", "scheduler")";
    var getTenantStatusUrl = "@Url.Action("GetTenantStatus", "PartialView")";
    var getNotificationCountUrl = "@Url.Action("GetNotificationCount", "PartialView")";
    var dataAlertUrl = "@Url.Action("DataAlert", "scheduler")";
    var dataLanguage = "@ViewBag.DataLanguage";
    var currentDateFormat = "@globalAppSettings.SystemSettings.DateFormat";
    var currentTimeFormat = "@globalAppSettings.SystemSettings.TimeFormat.ToString()";

    $("#selected_dashboard,#selected_category").selectpicker();
    $("#selected_childdashboard").attr("disabled", true);
    if (actionType == "Create") {
        createSchedule(itemId, itemName, categoryName, multiDashboardName)
    }
    else {
        editSchedule(scheduleId, itemId, itemName, categoryName, multiDashboardName)
    }
    if (($(parent.window).width()) > 1400) {
        $(".schedule-dialog").addClass("lg-schedule-flexible");
    }

    if (($(parent.window).width()) < 1400) {
        $(".schedule-dialog").removeClass("lg-schedule-flexible");
    }
    addPlacehoder("#schedule-dialog");

</script>