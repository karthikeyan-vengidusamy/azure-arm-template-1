@{
    var globalAppSettings = new TenantHandler().GetTenantConfig();

    ViewBag.Title = "[[[Slideshow]]] - " + globalAppSettings.SystemSettings.OrganizationName;
    var culture = ViewBag.Culture;
    var userId = (HttpContext.Current.User as ServerPrincipal).UserId;
    ViewBag.HelpSiteUrl = GlobalAppSettings.GetHelpSiteUrl(HelpSiteUrlNames.ManageSlideshows);
    var itemPermissions = ViewBag.ItemAddOptions as Dictionary<ItemType, bool>;
    var itemsCount = ViewBag.ItemsCount as Dictionary<ItemType, int>;
    var isMobile = DeviceDetection.IsMobile;
    var customUI = globalAppSettings.SystemSettings.CustomUI;
    var schemes = customUI != null && customUI.Profiles != null ? customUI.Schemes.Where(x => x.Name == customUI.Profiles[0].Slideshows.Scheme).FirstOrDefault() : null;
}

@section styles{
    @Styles.Render("~/bundles/styles/slideshow-listing")
}

@section scripts{
    @Scripts.Render("~/bundles/scripts/slideshow-listing")

    <script type="text/javascript">
        var deleteConfirmationUrl = "@Url.Action("deleteconfirmation", "items")";
        var deleteItemUrl = "@Url.Action("DeleteItem", "Slideshow")";
        var getLinkDialogViewUrl = "@Url.Action("GetLinkView", "items")";
        var editSlideShowUrl = "@Url.Action("EditSlideshow", "Slideshow")";
    </script>
    <script type="text/javascript">
        $(document)
            .ready(function () {
                $("#search-slideshows").val("");
                var data = ej.DataManager({
                    url: "@Url.Action("GetAllSlideshows", "Slideshow")",
                    adaptor: new ej.UrlAdaptor()
                });
                $("#slideshowGrid")
                    .ejGrid({
                        dataSource: data,
                        allowPaging: true,
                        pageSettings: { pageSize: 20 },
                        allowSorting: true,
                        allowSearching: true,
                        allowFiltering: true,
                        filterSettings: { filterType: "menu" },
                        enableAltRow: false,
                        gridLines: ej.Grid.GridLines.None,
                        load: "fnOnGridLoad",
                        actionBegin: "fnActionBegin",
                        actionComplete: function (args) {
                            $('[data-toggle="tooltip"]').tooltip();
                            showOrHideGridPager("#slideshowGrid");
                            if (args.model.currentViewData.length === 0) {
                                rowBound();
                            }
                        },
                        rowDataBound: function () {
                            var height = $(".e-gridcontent").height();
                            if (height != null) {
                                rowBound();
                            }
                        },
                        dataBound: function (args) {
                            $("[data-toggle='tooltip']").tooltip();
                        },
                        columns: [
                            {
                                field: "Name",
                                headerText: "[[[Name]]]",
                                templateID: "#slideshow-template",
                                headerTemplateID: "#item-name-header",
                                type: "string",
                                allowSorting: true,
                                allowFiltering: true,
                                width: 100
                            },
                            {
                                field: "CreatedByDisplayName",
                                headerText: "[[[Owner]]]",
                                width: 100,
                                headerTemplateID: "#owner-column",
                                allowSorting: true,
                                allowFiltering: true
                            },
                            {
                                field: "CreatedDate",
                                headerText: "[[[Created Date]]]",
                                width: 70,
                                allowSorting: false,
                                allowFiltering: false
                            },
                            {
                                template: true,
                                templateID: "#options",
                                width: (window.innerWidth > 1200) ? 15 : 25,
                                allowSorting: false,
                                allowFiltering: false
                            }
                        ]
                    });

                $.views.helpers({
                    slideshowUrl: function (id, name) {
                        return encodeURI(rootUrlAction + "/slideshow/" + id + "/" + name);
                    }
                });
            });
    </script>
}

@section MainSection{
    @if (itemsCount != null && itemsCount.ContainsKey(ItemType.Slideshow) && itemsCount[ItemType.Slideshow] > 0)
    {
        <script type="text/x-jsrender" id="slideshow-template">
            <a class="item-name grid-content" title="{{:Name}}" data-toggle="tooltip" href="{{:~slideshowUrl(Id, Name)}}" target="_blank">{{:Name}}</a>
        </script>
        <script type="text/x-jsrender" id="item-name-header">
            <div class="item-name">[[[Name]]]</div>
        </script>
        <script type="text/x-jsrender" id="owner-column">
            <div title="[[[Owner]]]">[[[Owner]]]</div>
        </script>
        <script type="text/x-jsrender" id="options">
            <div class="dropdown @(schemes != null && !schemes.ContextMenu ? "hide" : string.Empty)">
                <span class="dropdown-toggle option-icon" title="[[[Actions]]]" data-toggle="dropdown">
                    <span class="su su-options"> </span>
                </span>
                <ul class="dropdown-menu" role="menu">
                    <li class="menu-group @(schemes != null && !schemes.Open ? "hide" : string.Empty)">
                        <a href="{{:~slideshowUrl(Id, Name)}}" title="[[[Open]]]" target="_blank">
                            <i class="su su-open"><i class="su su-open path1"></i></i>
                            <span class="menu-text">[[[Open]]]</span>
                        </a>
                    </li>
                    <li class="menu-group @(schemes != null && !schemes.GetLink ? "hide" : string.Empty)">
                        <a href="javascript:void(0);" class="get-slideshow-link option-click" data-itemtype="{{:ItemType}}" data-item-id="{{:Id}}" data-name="{{:Name}}" data-url="{{:~slideshowUrl(Id, Name)}}" title="[[[Get Link]]]">
                            <i class="su su-link"></i>
                            <span class="menu-text">[[[Get Link]]]</span>
                        </a>
                    </li>
                    {{if CanWrite}}
                    <li title="[[[Edit]]]" class="@(schemes != null && !schemes.Edit ? "hide" : string.Empty)">
                        <a href="javascript:void(0);" class="edit-slideshow" data-item-id="{{:Id}}" title="[[[Edit]]]">
                            <i class="su su-edit"></i>
                            <span class="menu-text">[[[Edit]]]</span>
                        </a>
                    </li>
                    {{/if}}
                    {{if CreatedById==@(userId) || @(Convert.ToBoolean(HttpContext.Current.Session["IsAdmin"]).ToString().ToLower()) == true}}
                    <li class="menu-group @(schemes != null && !schemes.Share ? "hide" : string.Empty)">
                        <a href="javascript:void(0);" class="item-permissions" data-item-id="{{:Id}}" title="[[[Sharing Permissions]]]">
                            <i class="su su-manage-permission"></i>
                            <span class="menu-text">[[[Sharing Permissions]]]</span>
                        </a>
                    </li>
                    {{/if}}
                    {{if CanDelete}}
                    <li title="[[[Delete]]]" class="@(schemes != null && !schemes.Delete ? "hide" : string.Empty)">
                        <a href="javascript:void(0);" class="slideshow-delete" data-itemtype="{{:ItemType}}" data-item-id="{{:Id}}" data-name="{{:Name}}" title="[[[Delete]]]">
                            <i class="su su-delete"></i>
                            <span class="menu-text">[[[Delete]]]</span>
                        </a>
                    </li>
                    {{/if}}
                </ul>
            </div>
        </script>
        <div id="item-grid-container" data-grid-name="slideshows" class="admin-page-container slideshows-listing">
            <div class="admin-page-header col-lg-12">
                <h1 class="page-title col-lg-6 no-margin">
                    [[[SLIDESHOWS]]]
                </h1>
                @if (itemPermissions[ItemType.Slideshow])
                {
                    <button type="button" class="create-presentation pull-right primary-button">[[[Create Slideshow]]]</button>
                }
            </div>
            <div id="slideshows-grid-container" class="col-lg-12 admin-page-body">
                <div id="search-area" class="pull-right">
                    <input type="text" id="search-slideshows" class="pull-left no-margin" placeholder="[[[Search Slideshow]]]" />
                    <span class="su close-icon su-inner-close pull-left no-margin" id="clear-search" title="[[[Clear search]]]"></span>
                    <span class="su su-search search-slideshows pull-left no-margin" title="[[[Search Slideshow]]]"></span>
                </div>
                <div id="slideshowGrid" class="slide-show-grid">
                </div>
            </div>
        </div>
    }
    else
    {
        @Html.Partial("../DefaultPages/DefaultPages", new ViewDataDictionary { { "Permissions", itemPermissions }, { "ItemsCount", itemsCount }, { "ItemType", ItemType.Slideshow } })
    }

    @if (!isMobile)
    {
        @Html.Partial("../Items/_AddItems")
        @Html.Partial("../Items/_ItemVersion")
        @Html.Partial("../Items/_SharePermission")
    }

    <div id="popup-container" style="display:none" class="no-padding">
        <iframe id="scheduler-popup-iframe" class="datasource-popup-frame"></iframe>
    </div>

    @Scripts.Render("~/bundles/scripts/localizationcontent")
}